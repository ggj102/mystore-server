// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  user_id             String   @unique
  user_password       String
  user_name           String
  user_email          String
  user_phone          String
  user_address        String
  user_detail_address String
}

model User_Delivery_Address {
  id             Int      @id @default(autoincrement())
  user_id        Int
  recipient      String
  phone          String
  address        String
  detail_address String
  message        String?
}

model Product {
  id             Int      @id @default(autoincrement())
  name           String
  description    String
  defaultPrice   Int
  price          Int
  discount       Int
  image_path     String
  category       String
  popularity     Float
  time_sale      DateTime?
  release_date   DateTime
  is_issue       Boolean
  is_event       Boolean
  product_detail Product_Detail?
}

model Product_Detail {
  id                  Int      @id 
  image_path          String
  sub_image_path      String[]
  product_detail_image_path String[]
  domestic            String
  delivery_type       String
  delivery_price      String
  product             Product? @relation(fields: [id], references: [id])
}

model Product_Option {
  option_id      Int  @id @default(autoincrement())
  item_id        Int
  name           String
  option_price   Int
}

model Cart {
  user_id        Int
  item_id        Int
  option_id      Int
  count          Int

  @@id([user_id, item_id, option_id])
}

model Order {
  id                   Int @id @default(autoincrement())
  user_id              Int 
  order_name           String?
  recipient            String?
  phone                String?
  delivery_address     String?
  delivery_message     String?
  total_payment_price  Int?
  total_delivery_price Int?
  created_at            DateTime @default(now())
  payment_key           String?
  payment_method       String?
  order_Item           Order_Item[]
}

model Order_Item {
  order_id       Int
  item_id        Int
  option_id      Int
  item_name      String?
  item_option    String?
  image_path     String?
  payment_price  Int?
  count          Int
  order          Order? @relation(fields: [order_id], references: [id])

  @@id([order_id, item_id, option_id])
}